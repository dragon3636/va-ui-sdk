{"version":3,"file":"em-and-ai-ui-sdk-vnlp-header.mjs","sources":["../../../../projects/va/ui-sdk/vnlp-header/src/service/breadcrumb.service.ts","../../../../projects/va/ui-sdk/vnlp-header/src/components/breadcrumb.component.ts","../../../../projects/va/ui-sdk/vnlp-header/src/components/breadcrumb.component.html","../../../../projects/va/ui-sdk/vnlp-header/src/vnlp-header.component.ts","../../../../projects/va/ui-sdk/vnlp-header/src/vnlp-header.component.html","../../../../projects/va/ui-sdk/vnlp-header/src/vnlp-header.module.ts","../../../../projects/va/ui-sdk/vnlp-header/em-and-ai-ui-sdk-vnlp-header.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  Data,\r\n  NavigationEnd,\r\n  Router,\r\n} from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { Breadcrumb } from '../models/breadcrumb.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BreadcrumbService {\r\n  // Subject emitting the breadcrumb hierarchy\r\n  private readonly _breadcrumbs$ = new BehaviorSubject<Breadcrumb[]>([]);\r\n\r\n  // Observable exposing the breadcrumb hierarchy\r\n  readonly breadcrumbs$ = this._breadcrumbs$.asObservable();\r\n\r\n  constructor(private router: Router) {\r\n    this.router.events\r\n      .pipe(\r\n        // Filter the NavigationEnd events as the breadcrumb is updated only when the route reaches its end\r\n        filter((event) => event instanceof NavigationEnd)\r\n      )\r\n      .subscribe((event) => {\r\n        // Construct the breadcrumb hierarchy\r\n        const root = this.router.routerState.snapshot.root;\r\n        let breadcrumbs: Breadcrumb[] = [];\r\n        this.addBreadcrumb(root, [], breadcrumbs);\r\n\r\n        // Emit the new hierarchy\r\n        this._breadcrumbs$.next(breadcrumbs);\r\n      });\r\n  }\r\n\r\n  private addBreadcrumb(\r\n    route: ActivatedRouteSnapshot | null,\r\n    parentUrl: string[],\r\n    breadcrumbs: Breadcrumb[]\r\n  ) {\r\n    if (route) {\r\n      // Construct the route URL\r\n      const routeUrl = parentUrl.concat(route.url.map((url) => url.path));\r\n\r\n      // Add an element for the current route part\r\n      if (route.data['breadcrumb']) {\r\n        const breadcrumb = {\r\n          label: this.getLabel(route.data),\r\n          url: '/' + routeUrl.join('/'),\r\n        };\r\n        breadcrumbs.push(breadcrumb);\r\n      }\r\n\r\n      // Add another element for the next route part\r\n      this.addBreadcrumb(route.firstChild, routeUrl, breadcrumbs);\r\n    }\r\n  }\r\n\r\n  private getLabel(data: Data) {\r\n    // The breadcrumb can be defined as a static string or as a function to construct the breadcrumb element out of the route data\r\n    return typeof data['breadcrumb'] === 'function'\r\n      ? data['breadcrumb'](data)\r\n      : data['breadcrumb'];\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Breadcrumb } from '../models/breadcrumb.model';\r\nimport { BreadcrumbService } from '../service/breadcrumb.service';\r\n\r\n@Component({\r\n  selector: 'vnlp-breadcrumb',\r\n  templateUrl: './breadcrumb.component.html',\r\n  styleUrls: ['./breadcrumb.component.scss'],\r\n})\r\nexport class BreadcrumbComponent {\r\n  breadcrumbs$: Observable<Breadcrumb[]>;\r\n\r\n  constructor(private readonly breadcrumbService: BreadcrumbService) {\r\n    this.breadcrumbs$ = this.breadcrumbService.breadcrumbs$;\r\n  }\r\n}\r\n","<ul *ngIf=\"((breadcrumbs$ | async)?.length ?? 0) < 5\" class=\"flex gap-[8px]\">\r\n  <li\r\n    class=\"flex items-center gap-[6px] text-neutral-1 text-sm font-medium\"\r\n    *ngFor=\"let breadcrumb of breadcrumbs$ | async; let i = index\"\r\n  >\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"\r\n        i + 1 != (breadcrumbs$ | async)?.length ? element : current\r\n      \"\r\n    ></ng-container>\r\n\r\n    <ng-template #element>\r\n      <a [routerLink]=\"breadcrumb.url\">{{ breadcrumb.label }}</a>\r\n      <i\r\n        class=\"text-[18px] text-neutral-5 font-bold\"\r\n        [class]=\"'icon-vnlp-icon-arrow-right-3-linear'\"\r\n      ></i>\r\n      <!-- <div>></div> -->\r\n    </ng-template>\r\n\r\n    <ng-template #current>\r\n      <a class=\"text-neutral-5 text-sm\" [routerLink]=\"breadcrumb.url\">\r\n        {{ breadcrumb.label }}\r\n      </a>\r\n    </ng-template>\r\n  </li>\r\n</ul>\r\n\r\n<ul *ngIf=\"((breadcrumbs$ | async)?.length ?? 0) >= 5\" class=\"flex gap-[8px]\">\r\n  <li\r\n    class=\"flex gap-[6px] items-center text-neutral-1 text-sm font-medium\"\r\n    *ngFor=\"let breadcrumb of breadcrumbs$ | async; let i = index\"\r\n  >\r\n    <ng-container *ngIf=\"i === 0\">\r\n      <a [routerLink]=\"breadcrumb.url\">{{ breadcrumb.label }}</a>\r\n      <i\r\n        class=\"text-[18px] text-neutral-5 font-normal\"\r\n        [class]=\"'icon-vnlp-icon-arrow-right-3-linear'\"\r\n      ></i>\r\n      <a>...</a>\r\n      <i\r\n        class=\"text-[18px] text-neutral-5 font-normal\"\r\n        [class]=\"'icon-vnlp-icon-arrow-right-3-linear'\"\r\n      ></i>\r\n    </ng-container>\r\n\r\n    <ng-container\r\n      *ngIf=\"\r\n        i + 1 != (breadcrumbs$ | async)?.length &&\r\n        i > ((breadcrumbs$ | async)?.length ?? 0) - 4\r\n      \"\r\n    >\r\n      <a [routerLink]=\"breadcrumb.url\">{{ breadcrumb.label }}</a>\r\n      <i\r\n        class=\"text-[18px] text-neutral-5 font-normal\"\r\n        [class]=\"'icon-vnlp-icon-arrow-right-3-linear'\"\r\n      ></i>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf=\"i + 1 === ((breadcrumbs$ | async)?.length ?? 0)\">\r\n      <a class=\"text-neutral-5\" [routerLink]=\"breadcrumb.url\">\r\n        {{ breadcrumb.label }}\r\n      </a>\r\n    </ng-container>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'vnlp-header',\r\n  templateUrl: './vnlp-header.component.html',\r\n  styleUrls: ['./vnlp-header.component.scss'],\r\n})\r\nexport class VnlpHeaderComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"relative bg-white\">\r\n  <div class=\"flex items-center justify-between h-[60px] px-[28px]\">\r\n    <div class=\"text-sm font-semibold\"><vnlp-breadcrumb></vnlp-breadcrumb></div>\r\n    <div class=\"flex gap-[20px] pr-[40px]\">\r\n      <span class=\"text-neutral-4 text-[20px]\">\r\n        <i [class]=\"'icon-vnlp-icon-info-circle-linear'\"></i>\r\n      </span>\r\n      <div class=\"pointer-events-none flex gap-[6px] items-center\">\r\n        <div class=\"text-xs font-bold\">ENG</div>\r\n      </div>\r\n      <div class=\"cursor-pointer\">\r\n        <!-- <app-avatar></app-avatar> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { VnlpHeaderComponent } from './vnlp-header.component';\r\nimport { BreadcrumbComponent } from './components/breadcrumb.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  declarations: [VnlpHeaderComponent, BreadcrumbComponent],\r\n  imports: [CommonModule, RouterModule.forChild(routes)],\r\n  exports: [VnlpHeaderComponent, RouterModule],\r\n})\r\nexport class VnlpHeaderModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.BreadcrumbService","i3","i1.BreadcrumbComponent"],"mappings":"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"}