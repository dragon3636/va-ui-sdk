import { Component, EventEmitter, Output, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
export class VnlpInputTextComponent {
    constructor() {
        this.label = 'Label';
        this.name = '';
        this.value = '';
        this.valueChange = new EventEmitter();
        this.error = false;
        this.placeholder = 'Placeholder';
        this.disabled = false;
        this.icon = '';
        this.informationText = '';
        this.onChange = new EventEmitter();
        this.onBlur = new EventEmitter();
    }
    ngOnInit() { }
    handleChange() {
        this.valueChange.emit(this.value);
        this.onChange.emit({
            [this.name]: this.value,
        });
    }
    handleBlur(event) {
        this.onBlur.emit();
        event.target.blur();
    }
    clearInput() {
        this.value = '';
        this.handleChange();
    }
}
VnlpInputTextComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: VnlpInputTextComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
VnlpInputTextComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "14.2.12", type: VnlpInputTextComponent, selector: "vnlp-input-text", inputs: { label: "label", name: "name", value: "value", error: "error", placeholder: "placeholder", disabled: "disabled", icon: "icon", informationText: "informationText" }, outputs: { valueChange: "valueChange", onChange: "onChange", onBlur: "onBlur" }, ngImport: i0, template: "<div\r\n  [ngClass]=\"{\r\n    'inline-block': true,\r\n    error: input.touched && input.dirty && !input.value,\r\n    disabled: disabled,\r\n    'show-icon': icon,\r\n    information: informationText\r\n  }\"\r\n>\r\n  <label [for]=\"name\" class=\"inline-block text-sm mb-2\">{{ label }}</label>\r\n  <div ngClass=\"relative inline-block w-full\">\r\n    <label [for]=\"name\" *ngIf=\"icon\" class=\"input-icon\">\r\n      <i [class]=\"'icon icon-vnlp-icon-' + icon\"></i>\r\n    </label>\r\n    <label\r\n      *ngIf=\"value.length > 0\"\r\n      [for]=\"name\"\r\n      class=\"close-icon\"\r\n      (click)=\"clearInput()\"\r\n    >\r\n      <i class=\"icon icon-vnlp-icon-close-circle-linear\"></i>\r\n    </label>\r\n\r\n    <input\r\n      [name]=\"name\"\r\n      [id]=\"name\"\r\n      class=\"w-full h-[48px] rounded-[10px] transition-all ease-in-out duration-200\"\r\n      [(ngModel)]=\"value\"\r\n      (ngModelChange)=\"handleChange()\"\r\n      (blur)=\"handleBlur($event)\"\r\n      (keyup.enter)=\"handleBlur($event)\"\r\n      type=\"text\"\r\n      [placeholder]=\"placeholder\"\r\n      [disabled]=\"disabled\"\r\n      #input=\"ngModel\"\r\n    />\r\n    <div *ngIf=\"informationText\" class=\"info-text text-sm error-msg mt-2\">\r\n      {{ informationText }}\r\n    </div>\r\n    <div\r\n      *ngIf=\"input.touched && input.dirty && !input.value && !informationText\"\r\n      class=\"text-sm error-msg mt-2\"\r\n    >\r\n      Field required\r\n    </div>\r\n  </div>\r\n</div>\r\n", styles: [".show-icon input{padding-left:50px}input{padding:12px 18px;box-shadow:0 0 1px 1.5px #e6e8ec}input::placeholder{color:#b1b5c3}input:focus{box-shadow:0 0 1px 1.5px #007df9;caret-color:#007df9}input:focus~.info-text{color:#007df9}input:focus~.input-icon i{color:#007df9}input:focus:hover{box-shadow:0 0 1px 1.5px #007df9}input:focus:hover~.info-text{color:#007df9}input:hover{box-shadow:0 0 1px 1.5px #99cbfd}input:hover~.info-text{color:#007df9}.input-icon{position:absolute;top:12px;left:16px}.input-icon i{font-size:18px;color:#b1b5c3}.close-icon{position:absolute;top:12px;right:10px;font-size:18px;cursor:pointer}.error input{background-color:#ffe8ec;box-shadow:0 0 1px 1.5px #fb1b3c}.error input:hover{box-shadow:0 0 1px 1.5px #fb1b3c}.error input:hover~.info-text,.error input:focus~.info-text{color:#fb1b3c}.error input:hover~.input-icon i,.error input:focus~.input-icon i{color:#fb1b3c}.error .input-icon i{color:#fb1b3c}.error .error-msg{color:#fb1b3c;font-weight:500}.disabled input{color:#b1b5c3;background-color:#f4f5f6;cursor:not-allowed}.disabled input:hover{box-shadow:0 0 1px 1.5px #e6e8ec}.disabled input:hover~.info-text,.disabled input:focus~.info-text{color:#b1b5c3}.disabled input:hover~.input-icon i,.disabled input:focus~.input-icon i{color:#b1b5c3}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.12", ngImport: i0, type: VnlpInputTextComponent, decorators: [{
            type: Component,
            args: [{ selector: 'vnlp-input-text', template: "<div\r\n  [ngClass]=\"{\r\n    'inline-block': true,\r\n    error: input.touched && input.dirty && !input.value,\r\n    disabled: disabled,\r\n    'show-icon': icon,\r\n    information: informationText\r\n  }\"\r\n>\r\n  <label [for]=\"name\" class=\"inline-block text-sm mb-2\">{{ label }}</label>\r\n  <div ngClass=\"relative inline-block w-full\">\r\n    <label [for]=\"name\" *ngIf=\"icon\" class=\"input-icon\">\r\n      <i [class]=\"'icon icon-vnlp-icon-' + icon\"></i>\r\n    </label>\r\n    <label\r\n      *ngIf=\"value.length > 0\"\r\n      [for]=\"name\"\r\n      class=\"close-icon\"\r\n      (click)=\"clearInput()\"\r\n    >\r\n      <i class=\"icon icon-vnlp-icon-close-circle-linear\"></i>\r\n    </label>\r\n\r\n    <input\r\n      [name]=\"name\"\r\n      [id]=\"name\"\r\n      class=\"w-full h-[48px] rounded-[10px] transition-all ease-in-out duration-200\"\r\n      [(ngModel)]=\"value\"\r\n      (ngModelChange)=\"handleChange()\"\r\n      (blur)=\"handleBlur($event)\"\r\n      (keyup.enter)=\"handleBlur($event)\"\r\n      type=\"text\"\r\n      [placeholder]=\"placeholder\"\r\n      [disabled]=\"disabled\"\r\n      #input=\"ngModel\"\r\n    />\r\n    <div *ngIf=\"informationText\" class=\"info-text text-sm error-msg mt-2\">\r\n      {{ informationText }}\r\n    </div>\r\n    <div\r\n      *ngIf=\"input.touched && input.dirty && !input.value && !informationText\"\r\n      class=\"text-sm error-msg mt-2\"\r\n    >\r\n      Field required\r\n    </div>\r\n  </div>\r\n</div>\r\n", styles: [".show-icon input{padding-left:50px}input{padding:12px 18px;box-shadow:0 0 1px 1.5px #e6e8ec}input::placeholder{color:#b1b5c3}input:focus{box-shadow:0 0 1px 1.5px #007df9;caret-color:#007df9}input:focus~.info-text{color:#007df9}input:focus~.input-icon i{color:#007df9}input:focus:hover{box-shadow:0 0 1px 1.5px #007df9}input:focus:hover~.info-text{color:#007df9}input:hover{box-shadow:0 0 1px 1.5px #99cbfd}input:hover~.info-text{color:#007df9}.input-icon{position:absolute;top:12px;left:16px}.input-icon i{font-size:18px;color:#b1b5c3}.close-icon{position:absolute;top:12px;right:10px;font-size:18px;cursor:pointer}.error input{background-color:#ffe8ec;box-shadow:0 0 1px 1.5px #fb1b3c}.error input:hover{box-shadow:0 0 1px 1.5px #fb1b3c}.error input:hover~.info-text,.error input:focus~.info-text{color:#fb1b3c}.error input:hover~.input-icon i,.error input:focus~.input-icon i{color:#fb1b3c}.error .input-icon i{color:#fb1b3c}.error .error-msg{color:#fb1b3c;font-weight:500}.disabled input{color:#b1b5c3;background-color:#f4f5f6;cursor:not-allowed}.disabled input:hover{box-shadow:0 0 1px 1.5px #e6e8ec}.disabled input:hover~.info-text,.disabled input:focus~.info-text{color:#b1b5c3}.disabled input:hover~.input-icon i,.disabled input:focus~.input-icon i{color:#b1b5c3}\n"] }]
        }], ctorParameters: function () { return []; }, propDecorators: { label: [{
                type: Input
            }], name: [{
                type: Input
            }], value: [{
                type: Input
            }], valueChange: [{
                type: Output
            }], error: [{
                type: Input
            }], placeholder: [{
                type: Input
            }], disabled: [{
                type: Input
            }], icon: [{
                type: Input
            }], informationText: [{
                type: Input
            }], onChange: [{
                type: Output
            }], onBlur: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidm5scC1pbnB1dC10ZXh0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3ZhL3VpLXNkay92bmxwLWlucHV0LXRleHQvc3JjL3ZubHAtaW5wdXQtdGV4dC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy92YS91aS1zZGsvdm5scC1pbnB1dC10ZXh0L3NyYy92bmxwLWlucHV0LXRleHQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxZQUFZLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQzs7OztBQU8vRSxNQUFNLE9BQU8sc0JBQXNCO0lBY2pDO1FBYlMsVUFBSyxHQUFXLE9BQU8sQ0FBQztRQUN4QixTQUFJLEdBQVcsRUFBRSxDQUFDO1FBQ2xCLFVBQUssR0FBVyxFQUFFLENBQUM7UUFDbEIsZ0JBQVcsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xDLFVBQUssR0FBWSxLQUFLLENBQUM7UUFDdkIsZ0JBQVcsR0FBVyxhQUFhLENBQUM7UUFDcEMsYUFBUSxHQUFZLEtBQUssQ0FBQztRQUMxQixTQUFJLEdBQVcsRUFBRSxDQUFDO1FBQ2xCLG9CQUFlLEdBQVcsRUFBRSxDQUFDO1FBRTVCLGFBQVEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzlCLFdBQU0sR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBRXZCLENBQUM7SUFFaEIsUUFBUSxLQUFVLENBQUM7SUFFbkIsWUFBWTtRQUNWLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztZQUNqQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJLENBQUMsS0FBSztTQUN4QixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsVUFBVSxDQUFDLEtBQVU7UUFDbkIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNuQixLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFRCxVQUFVO1FBQ1IsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3RCLENBQUM7O29IQWpDVSxzQkFBc0I7d0dBQXRCLHNCQUFzQixzVENQbkMscytDQStDQTs0RkR4Q2Esc0JBQXNCO2tCQUxsQyxTQUFTOytCQUNFLGlCQUFpQjswRUFLbEIsS0FBSztzQkFBYixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSztnQkFDRyxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0ksV0FBVztzQkFBcEIsTUFBTTtnQkFDRSxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csV0FBVztzQkFBbkIsS0FBSztnQkFDRyxRQUFRO3NCQUFoQixLQUFLO2dCQUNHLElBQUk7c0JBQVosS0FBSztnQkFDRyxlQUFlO3NCQUF2QixLQUFLO2dCQUVJLFFBQVE7c0JBQWpCLE1BQU07Z0JBQ0csTUFBTTtzQkFBZixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIEV2ZW50RW1pdHRlciwgT3V0cHV0LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd2bmxwLWlucHV0LXRleHQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi92bmxwLWlucHV0LXRleHQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3ZubHAtaW5wdXQtdGV4dC5jb21wb25lbnQuc2NzcyddLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgVm5scElucHV0VGV4dENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZyA9ICdMYWJlbCc7XHJcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nID0gJyc7XHJcbiAgQElucHV0KCkgdmFsdWU6IHN0cmluZyA9ICcnO1xyXG4gIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICBASW5wdXQoKSBlcnJvcjogYm9vbGVhbiA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyOiBzdHJpbmcgPSAnUGxhY2Vob2xkZXInO1xyXG4gIEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuID0gZmFsc2U7XHJcbiAgQElucHV0KCkgaWNvbjogc3RyaW5nID0gJyc7XHJcbiAgQElucHV0KCkgaW5mb3JtYXRpb25UZXh0OiBzdHJpbmcgPSAnJztcclxuXHJcbiAgQE91dHB1dCgpIG9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gIEBPdXRwdXQoKSBvbkJsdXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7fVxyXG5cclxuICBoYW5kbGVDaGFuZ2UoKSB7XHJcbiAgICB0aGlzLnZhbHVlQ2hhbmdlLmVtaXQodGhpcy52YWx1ZSk7XHJcbiAgICB0aGlzLm9uQ2hhbmdlLmVtaXQoe1xyXG4gICAgICBbdGhpcy5uYW1lXTogdGhpcy52YWx1ZSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlQmx1cihldmVudDogYW55KSB7XHJcbiAgICB0aGlzLm9uQmx1ci5lbWl0KCk7XHJcbiAgICBldmVudC50YXJnZXQuYmx1cigpO1xyXG4gIH1cclxuXHJcbiAgY2xlYXJJbnB1dCgpIHtcclxuICAgIHRoaXMudmFsdWUgPSAnJztcclxuICAgIHRoaXMuaGFuZGxlQ2hhbmdlKCk7XHJcbiAgfVxyXG59XHJcbiIsIjxkaXZcclxuICBbbmdDbGFzc109XCJ7XHJcbiAgICAnaW5saW5lLWJsb2NrJzogdHJ1ZSxcclxuICAgIGVycm9yOiBpbnB1dC50b3VjaGVkICYmIGlucHV0LmRpcnR5ICYmICFpbnB1dC52YWx1ZSxcclxuICAgIGRpc2FibGVkOiBkaXNhYmxlZCxcclxuICAgICdzaG93LWljb24nOiBpY29uLFxyXG4gICAgaW5mb3JtYXRpb246IGluZm9ybWF0aW9uVGV4dFxyXG4gIH1cIlxyXG4+XHJcbiAgPGxhYmVsIFtmb3JdPVwibmFtZVwiIGNsYXNzPVwiaW5saW5lLWJsb2NrIHRleHQtc20gbWItMlwiPnt7IGxhYmVsIH19PC9sYWJlbD5cclxuICA8ZGl2IG5nQ2xhc3M9XCJyZWxhdGl2ZSBpbmxpbmUtYmxvY2sgdy1mdWxsXCI+XHJcbiAgICA8bGFiZWwgW2Zvcl09XCJuYW1lXCIgKm5nSWY9XCJpY29uXCIgY2xhc3M9XCJpbnB1dC1pY29uXCI+XHJcbiAgICAgIDxpIFtjbGFzc109XCInaWNvbiBpY29uLXZubHAtaWNvbi0nICsgaWNvblwiPjwvaT5cclxuICAgIDwvbGFiZWw+XHJcbiAgICA8bGFiZWxcclxuICAgICAgKm5nSWY9XCJ2YWx1ZS5sZW5ndGggPiAwXCJcclxuICAgICAgW2Zvcl09XCJuYW1lXCJcclxuICAgICAgY2xhc3M9XCJjbG9zZS1pY29uXCJcclxuICAgICAgKGNsaWNrKT1cImNsZWFySW5wdXQoKVwiXHJcbiAgICA+XHJcbiAgICAgIDxpIGNsYXNzPVwiaWNvbiBpY29uLXZubHAtaWNvbi1jbG9zZS1jaXJjbGUtbGluZWFyXCI+PC9pPlxyXG4gICAgPC9sYWJlbD5cclxuXHJcbiAgICA8aW5wdXRcclxuICAgICAgW25hbWVdPVwibmFtZVwiXHJcbiAgICAgIFtpZF09XCJuYW1lXCJcclxuICAgICAgY2xhc3M9XCJ3LWZ1bGwgaC1bNDhweF0gcm91bmRlZC1bMTBweF0gdHJhbnNpdGlvbi1hbGwgZWFzZS1pbi1vdXQgZHVyYXRpb24tMjAwXCJcclxuICAgICAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXHJcbiAgICAgIChuZ01vZGVsQ2hhbmdlKT1cImhhbmRsZUNoYW5nZSgpXCJcclxuICAgICAgKGJsdXIpPVwiaGFuZGxlQmx1cigkZXZlbnQpXCJcclxuICAgICAgKGtleXVwLmVudGVyKT1cImhhbmRsZUJsdXIoJGV2ZW50KVwiXHJcbiAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgW3BsYWNlaG9sZGVyXT1cInBsYWNlaG9sZGVyXCJcclxuICAgICAgW2Rpc2FibGVkXT1cImRpc2FibGVkXCJcclxuICAgICAgI2lucHV0PVwibmdNb2RlbFwiXHJcbiAgICAvPlxyXG4gICAgPGRpdiAqbmdJZj1cImluZm9ybWF0aW9uVGV4dFwiIGNsYXNzPVwiaW5mby10ZXh0IHRleHQtc20gZXJyb3ItbXNnIG10LTJcIj5cclxuICAgICAge3sgaW5mb3JtYXRpb25UZXh0IH19XHJcbiAgICA8L2Rpdj5cclxuICAgIDxkaXZcclxuICAgICAgKm5nSWY9XCJpbnB1dC50b3VjaGVkICYmIGlucHV0LmRpcnR5ICYmICFpbnB1dC52YWx1ZSAmJiAhaW5mb3JtYXRpb25UZXh0XCJcclxuICAgICAgY2xhc3M9XCJ0ZXh0LXNtIGVycm9yLW1zZyBtdC0yXCJcclxuICAgID5cclxuICAgICAgRmllbGQgcmVxdWlyZWRcclxuICAgIDwvZGl2PlxyXG4gIDwvZGl2PlxyXG48L2Rpdj5cclxuIl19